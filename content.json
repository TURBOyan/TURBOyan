{"meta":{"title":"赶集","subtitle":"Turboyan","description":"赶集","author":"TURBO Yan","url":"https://blog.turboyan.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-05-19T17:28:31.658Z","updated":"2022-05-19T17:28:31.658Z","comments":false,"path":"/404.html","permalink":"https://blog.turboyan.com/404.html","excerpt":"","text":""},{"title":"friends","date":"2022-05-19T17:28:31.660Z","updated":"2022-05-19T17:28:31.660Z","comments":true,"path":"friends/index.html","permalink":"https://blog.turboyan.com/friends/index.html","excerpt":"","text":""},{"title":"关于TURBO","date":"2024-03-26T17:25:21.642Z","updated":"2024-03-26T17:25:21.642Z","comments":false,"path":"about/index.html","permalink":"https://blog.turboyan.com/about/index.html","excerpt":"","text":"基本资料 中文代号：严一展 英文代号：TURBO 微信公众号：特博工坊 首都：宁波 窝点：杭州 旧都：新疆乌鲁木齐 GitHub：TURBOyan Gitee：TURBOyan ​ 个人介绍 ​ 本科就读于ZUST浙江科技学院 ​ 本科阶段获智能车竞赛ROS组国家一等奖(第三名) ​ 各项A类竞赛省三等奖共四项（省三拿到手软，说出来都是痛） ​ 技能 软件： ​ C语言：★★★★☆ ​ Git： ★★★★☆ ​ ROS： ★★★☆☆ ​ C++ : ★★☆☆☆ ​ Linux： ★★☆☆☆ ​ QT： ★★☆☆☆ 硬件 ​ 焊接： ★★★★☆ ​ Altium designer：★★★☆☆ ​ SolidWorks： ★★★☆☆ ​ 项目 基于STM32的200K带宽示波器 基于STM32的100K带宽DDS任意信号发生器 基于ROS的室外移动机器人 基于ARM的多传感器融合智能循迹平衡车 基于ARM和ROS的麦克纳姆轮全向移动机器人 基于ARM的20KHz电磁信号基波幅值提取"},{"title":"书单","date":"2022-05-19T17:28:31.659Z","updated":"2022-05-19T17:28:31.659Z","comments":false,"path":"books/index.html","permalink":"https://blog.turboyan.com/books/index.html","excerpt":"","text":""},{"title":"categories","date":"2022-05-19T17:28:31.659Z","updated":"2022-05-19T17:28:31.659Z","comments":true,"path":"categories/index.html","permalink":"https://blog.turboyan.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-05-19T17:28:31.660Z","updated":"2022-05-19T17:28:31.660Z","comments":true,"path":"links/index.html","permalink":"https://blog.turboyan.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-05-19T17:28:31.660Z","updated":"2022-05-19T17:28:31.660Z","comments":false,"path":"repository/index.html","permalink":"https://blog.turboyan.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-05-19T17:28:31.661Z","updated":"2022-05-19T17:28:31.661Z","comments":false,"path":"tags/index.html","permalink":"https://blog.turboyan.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用vscode remote ssh功能远程连接服务器或树莓派时，报错Setting up SSH tunnel的解决办法！","slug":"vscode_remote_ssh_tunnel","date":"2020-10-03T05:15:03.000Z","updated":"2022-05-19T18:02:17.427Z","comments":true,"path":"2020/10/03/vscode_remote_ssh_tunnel/","link":"","permalink":"https://blog.turboyan.com/2020/10/03/vscode_remote_ssh_tunnel/","excerpt":"当你想用vscode remote ssh 功能远程开发linux服务器、树莓派时，.vscode-server文件创建完成，但是一直显示卡在 Setting up SSH Host &lt;你的用户名&gt;：Setting up SSH tunnel","text":"当你想用vscode remote ssh 功能远程开发linux服务器、树莓派时，.vscode-server文件创建完成，但是一直显示卡在 Setting up SSH Host &lt;你的用户名&gt;：Setting up SSH tunnel 此时只需按住ctrl+shift+p,输入remote-ssh:settings,点击进入 找到 Remote.SSH:Enable Dynamic Forwarding 选项 将他的勾去掉 此时再重新连接远程linux，即可成功连接 原因分析 Setting up SSH tunnel 这句话的意思是正在设置SSH隧道 而Remote-ssh:settings内的选项 Whether to use SSH dynamic forwarding to allow setting up new port tunnels over an existing SSH connecting. When this is used, a password only needs to be entered once for each window. 这句话的意思是：是否使用SSH动态转发以允许在现有SSH连接上设置新的端口隧道。使用此选项时，每个窗口只需输入一次密码。 我之前没有了解过SSH隧道，猜测大概的原因是我使能了这个选项，当remote ssh配置成功时，vscode一直在等待SSH隧道的建立，而远端linux方面我并没有开启ssh tunnel的使能，所以才造成了一直未响应。 在此先挖个坑，待以后学习深入再进一步了解SSH tunnel，再来详细解释。 P.S. 个人主页：https://www.turboyan.com GitHub：https://github.com/TURBOyan Email：turboisyan@foxmail.com 公众号：特别白的盐","categories":[{"name":"问题","slug":"问题","permalink":"https://blog.turboyan.com/categories/%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://blog.turboyan.com/tags/vscode/"}]},{"title":"一种通俗易懂的PWM的解释","slug":"PWM","date":"2020-08-26T08:35:10.000Z","updated":"2024-03-26T16:46:53.103Z","comments":true,"path":"2020/08/26/PWM/","link":"","permalink":"https://blog.turboyan.com/2020/08/26/PWM/","excerpt":"","text":"​ ​ 上图所示的是电脑显示屏的微观图像，拍摄的方法非常有意思，通过在手机摄像头上滴一滴水滴，形成凸透镜，就能做成一个简易版的显微镜。 ​ ​ 从显微录像中也可以很明显的看到显示屏的一个个像素组成，我的ThinkPad显示屏共有1366列768排、近100万像素点，而每一个像素点，都由红、绿、蓝三种颜色组成。由RGB色彩的知识可以知道，通过对红绿蓝不同深度的配比，能调出世界上所有的颜色。 ​ 这样一来，本来高级、难学的彩屏显示，就变得非常简单，我们只需要计算好每个像素的红绿蓝颜色深度，且主控芯片的频率足够高，让显示屏能在20ms(人眼的视觉暂留时间)内刷新完整一面图像，即可让显示屏连续的显示视频。 ​ 那么就有一个问题，就是如何让只能输出1和0两种数字状态的逻辑芯片，来控制RGB三色深度这连续的模拟量？ ​ 模拟量控制的两种办法 **1、**经过数字信号到模拟信号的转化，让只有两种状态的开关信号，转换到连续信号。 这种办法可行，但是由于转换时间的限制，难以提高屏幕的刷新频率，并且每一个像素点都需要单独的数模转换模块，这样在硬件上的工程量会非常非常庞大，我们总不想自己的手机屏幕后边背着一个巨大的主机箱吧？因此这种方法在驱动显示屏上是完全不可行的。 **2、**再者，便是使用一种由A.H.里夫在20世纪30年代发明的脉宽调制技术（Pulse width modulation），简称PWM ​ ​ PWM技术的优点 **1、**PWM从处理器到被控系统信号都是数字形式的，无需进行数模转换。 **2、**让信号保持为数字形式可将噪声影响降到最小。噪声只有在强到足以将逻辑1改变为逻辑0或将逻辑0改变为逻辑1时，才能对数字信号产生影响。 因此，因为他实现比较容易，且有极强的抗干扰能力，PWM被广泛应用于功率调节，通信等领域。而上文所说的显示屏像素的RGB配比，正是PWM在功率调节上的一个典型应用。 ​ PWM的两个概念： 1、周期/频率 ​ 周期是指一个PWM信号一个上升沿 ↑ 执行至下一个上升沿所需要的时间，一般用字母T表示。 ​ 频率则是周期的倒数，即1/T。 ​ 12频率为1Hz的PWM信号施加在LED上可以感受到肉眼可见的频闪 ​ 123频率为50Hz的PWM信号在LED灯上的体现人眼视觉暂留时间为20ms因此50Hz的信号足以让人眼感受不到频闪。 ​ 2、占空比 ​ 一个PWM信号内其中一个周期，高电平时间所占整个周期的百分比，即一个5V的直流信号相当于占空比为100%的PWM信号，一个0V的直流信号相当于占空比为0%的直流信号。 ​ 1将PWM的占空比由0%慢慢提高到100%时LED亮度的变化 ​ ​ ​ 很多刚接触PWM的人往往不太能理解为什么被施加了不同占空比PWM的LED，会直接体现在LED的亮度变化上，简单来说就是 1为什么PWM能控制LED亮度、电机的转速？ ​ 我在初学PWM的时候也有这样的困惑，也去网上查了很多资料，但是大部分都涉及到数学物理计算上，不仅难懂并且没有让人有看下去的欲望，时间长了也就放弃了搞懂他原理的冲动，有种食之无味弃之可惜的鸡肋感。 ​ 后来偶然间，我看到了一种通俗易懂的解释方法，我也茅塞顿开，他的解释是，PWM的占空比越大，那么LED开启的时间占比越大，宏观上释放的能量越高，反之释放的能量越低，这样当提高了频率，让使用者无法感受到开关量的变化，就会使得LED的变亮或者变暗。 1234小米台灯上的调光按钮，他其实不是一个可调电阻而是一个脉冲开关同样是利用了单片机来处理脉冲数据而输出PWM从而达到调光的效果 1234按下按钮并且旋转可以调节灯光的色温他是通过调节暖白色和亮白色两种LED亮度的配比来达到调节色温的目的同样使用到了PWM的技术 ​ ​ ​ 这种说法似乎是有些偷换概念，和真正意义上的调光调速似乎不太一样，但是从能量上来讲，的确可以说通所有的现象。 P.S. 个人主页：https://www.turboyan.com GitHub：https://github.com/TURBOyan Email：turboisyan@foxmail.com 公众号：特别白的盐","categories":[{"name":"教程","slug":"教程","permalink":"https://blog.turboyan.com/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"月球灯","slug":"月球灯","permalink":"https://blog.turboyan.com/tags/%E6%9C%88%E7%90%83%E7%81%AF/"},{"name":"小知识","slug":"小知识","permalink":"https://blog.turboyan.com/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"}]},{"title":"【底层】MPU9250(电子指南针+六轴)通用底层（模拟IIC）","slug":"MPU9250","date":"2020-07-03T05:15:03.000Z","updated":"2024-03-26T16:41:36.824Z","comments":true,"path":"2020/07/03/MPU9250/","link":"","permalink":"https://blog.turboyan.com/2020/07/03/MPU9250/","excerpt":"","text":"项目 地址（选中复制到浏览器打开或发送至电脑） 备注 底层 https://github.com/TURBOyan/MPU9250.git 例程 https://github.com/TURBOyan/MPU9250_Example.git 百度网盘 链接：https://pan.baidu.com/s/1sq9QN1b6RG6lJ_c780nBYQ 提取码：oly7 文件总大小 1.40MB 时序 MPL频率 最高200Hz，默认100Hz 读取一次数据所需时间 约2.5ms Refresh_MPUTeam函数 说明 1、实测MPU9250在芯片Z轴垂直于水平面初始化（必须），并开启10秒左右后，融合了电子罗盘的偏航角10分钟漂移不超过0.1度，稳定性高于MPU6050。 2、如果芯片周围有强磁，看到Yaw角迟迟不能稳定的话，则需要八字校准电子罗盘，即开启后将模块做八字回旋动作，直到看到Yaw角稳定输出。 代码下载 一、GitHub方式（推荐，便于后续更新和代码管理） 可移植底层链接👇 1https://github.com/TURBOyan/MPU9250.git 例程链接👇 例程内已有的移植好的单片机有：1、LPC54606 1https://github.com/TURBOyan/MPU9250-Example.git 点击查看Github下载教程👇 使用GitHub来团队协作和管理你的代码 二、百度网盘下载 123链接：https://pan.baidu.com/s/1sq9QN1b6RG6lJ_c780nBYQ提取码：oly7复制这段内容后打开百度网盘手机App，操作更方便哦 代码移植 一、克隆代码 这里我拿LPC546XX例程举例 在你的工程文件夹内，任选一个位置，这里我选择了…/USER/ 这个文件夹是专门放用户自己写的代码和底层用的 在文件夹内右击git bash将代码克隆进去，具体办法点击这里查看教程 二、添加C文件和H文件路径到工程内 这部分比较容易 如果有不会的同学可以自行百度 三、修改配置文件 ！！！！最关键的一步！！！！！ 这里要修改的非常少 需要修改的文件只有 MPU9250_Config.h 内部包含了传入的平台GPIO操作函数 具体做法详见这个头文件 都有详细注释 三、调用函数读取模块数据 1、在需要读取MPU9250数据的头文件内包括MPU_ForUser.h文件 2、查看MPU_ForUser.h内函数，并阅读调用说明 需要调用的函数有： （1）MPU_Init_ForUser();用于MPU9250初始化 （2）Refresh_MPUTeam(DMP_MPL);用于读取三态角值，实测在正确调用的情况下，执行一次需要2.5ms 3、执行一次Refresh_MPUTeam后，相对应的数据将刷新在结构体MPU_Data内，此结构体可在任何包括了MPU_ForUser的地方使用，是全局结构体。 其他具体用法详见MPU_ForUser和MPU9250_Config内说明 备注：单片机和模块连接除了IIC的SCL、SDA引脚以外，还需连一根线从模块的INT到单片机的外部中断引脚，用作数据准备好的信号，中断触发的周期将由MPU9250_Config.h文件内的DEFAULT_MPU_HZ决定，也就是MPL的刷新频率，一般最高200Hz，这里默认是100hz P.S. 个人主页：https://www.turboyan.com GitHub：https://github.com/TURBOyan Email：turboisyan@foxmail.com 公众号：特别白的盐","categories":[{"name":"代码","slug":"代码","permalink":"https://blog.turboyan.com/categories/%E4%BB%A3%E7%A0%81/"}],"tags":[{"name":"MPU9250底层","slug":"MPU9250底层","permalink":"https://blog.turboyan.com/tags/MPU9250%E5%BA%95%E5%B1%82/"}]}],"categories":[{"name":"问题","slug":"问题","permalink":"https://blog.turboyan.com/categories/%E9%97%AE%E9%A2%98/"},{"name":"教程","slug":"教程","permalink":"https://blog.turboyan.com/categories/%E6%95%99%E7%A8%8B/"},{"name":"代码","slug":"代码","permalink":"https://blog.turboyan.com/categories/%E4%BB%A3%E7%A0%81/"}],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://blog.turboyan.com/tags/vscode/"},{"name":"月球灯","slug":"月球灯","permalink":"https://blog.turboyan.com/tags/%E6%9C%88%E7%90%83%E7%81%AF/"},{"name":"小知识","slug":"小知识","permalink":"https://blog.turboyan.com/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"},{"name":"MPU9250底层","slug":"MPU9250底层","permalink":"https://blog.turboyan.com/tags/MPU9250%E5%BA%95%E5%B1%82/"}]}